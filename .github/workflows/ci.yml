name: Node.js CI/CD with ArgoCD

on:
  push:
    branches:
      - main
      
permissions:
  contents: write
  issues: write
  actions: write
  security-events: write
  
env:
  DOCKER_IMAGE: "arunk369/nodejs-app"
  NEXUS_REPO: "18.191.19.141:5000"
  TRIVY_IMAGE: "aquasec/trivy"
  SONAR_HOST_URL: "http://18.191.19.141:9000"
  SONAR_PROJECT_KEY: "My-App"

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set Build Number
        run: echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Install Sonar Scanner
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -Lo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-*/ /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Build Docker Image with Build Number
        run: |
          docker build --no-cache -t $DOCKER_IMAGE:${{ env.BUILD_NUMBER }} .
          docker tag $DOCKER_IMAGE:${{ env.BUILD_NUMBER }} $NEXUS_REPO/$DOCKER_IMAGE:${{ env.BUILD_NUMBER }}

      - name: Trivy Vulnerability Scan
        run: |
          docker pull $TRIVY_IMAGE
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock $TRIVY_IMAGE image $DOCKER_IMAGE:${{ env.BUILD_NUMBER }}

      - name: Start Node.js App
        run: |
          docker run -d --name node-app -p 3000:3000 $DOCKER_IMAGE:${{ env.BUILD_NUMBER }}
          sleep 10  # Wait for the app to start

      - name: Check Node.js App
        run: |
          curl -I http://localhost:3000 || exit 1

      - name: Set Permissions
        run: |
          sudo chmod -R 777 /home/runner/work/POC1-2025/POC1-2025

      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          target: http://localhost:3000
          rules: pii,csrf
          fail_action: false
          docker_name: ghcr.io/zaproxy/zaproxy:stable
          issue_title: ZAP Scan Baseline Report
          allow_issue_writing: true
          format: md,html,json
          
      - name: Allow Insecure Nexus Registry
        run: |
         sudo mkdir -p /etc/docker
         echo '{ "insecure-registries": ["http://18.191.19.141:5000"] }' | sudo tee /etc/docker/daemon.json
         sudo systemctl restart docker

      - name: Push Docker Image to Nexus with Build Number
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
        run: |
          echo "$NEXUS_PASS" | docker login $NEXUS_REPO -u "$NEXUS_USER" --password-stdin
          docker push $NEXUS_REPO/$DOCKER_IMAGE:${{ env.BUILD_NUMBER }}






